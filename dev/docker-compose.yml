version: "3"

volumes:
  prometheus-volume:
  pgadmin-data:

services:
  db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas-dev"
    ports:
      - "5434:5432"
    volumes:
      - ./sql-seed/app-backend-seed.sql:/docker-entrypoint-initdb.d/1-app-backend-seed.sql:Z
      - ./local-testing-data/app-backend.sql:/docker-entrypoint-initdb.d/2-app-backend-testing-data.sql:Z
      - ./sql-seed/transporter-backend-seed.sql:/docker-entrypoint-initdb.d/1-transporter-backend-seed.sql:Z
      - ./local-testing-data/atlas-transport.sql:/docker-entrypoint-initdb.d/2-atlas-transport-testing-data.sql:Z
      - ./sql-seed/parking-bap-seed.sql:/docker-entrypoint-initdb.d/1-parking-bap-seed.sql:Z
      - ./local-testing-data/parking-bap.sql:/docker-entrypoint-initdb.d/2-parking-bap-testing-data.sql:Z
      - ./sql-seed/public-transport-bap-seed.sql:/docker-entrypoint-initdb.d/1-public-transport-bap-seed.sql:Z
      - ./local-testing-data/public-transport-bap.sql:/docker-entrypoint-initdb.d/2-public-transport-bap-testing-data.sql:Z
      - ./sql-seed/mock-registry-seed.sql:/docker-entrypoint-initdb.d/1-mock-registry-seed.sql:Z
      - ./local-testing-data/mock-registry.sql:/docker-entrypoint-initdb.d/2-mock-registry-testing-data.sql:Z
      - ./sql-seed/scheduler-example-seed.sql:/docker-entrypoint-initdb.d/1-scheduler-example-seed.sql:Z
      - ./sql-seed/driver-offer-bpp-seed.sql:/docker-entrypoint-initdb.d/1-driver-offer-bpp-seed.sql:Z
      - ./local-testing-data/driver-offer-bpp-testing-data.sql:/docker-entrypoint-initdb.d/2-driver-offer-bpp-testing-data.sql:Z

    environment:
      - POSTGRES_DB=atlas_dev
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  redis:
    image: "redis:5"
    ports:
      - "6379:6379"
  passetto-db:
    image: "postgres:12.3"
    container_name: "passetto-enc-db"
    ports:
      - "5422:5432"
    volumes:
      - ./sql-seed/passetto-seed.sql:/docker-entrypoint-initdb.d/create_schema.sql:Z
    environment:
      - POSTGRES_DB=passetto
      - POSTGRES_USER=passetto
      - POSTGRES_PASSWORD=passetto
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  passetto-server:
    image: "juspayin/passetto-hs:0b18530"
    container_name: "passetto-enc-server"
    command: demo # for DEV only
    ports:
      - "8021:8012"
    environment:
      - "PASSETTO_PG_BACKEND_CONN_STRING=postgresql://passetto:passetto@passetto-enc-db:5432/passetto"
  prometheus:
    image: prom/prometheus:v2.27.1
    container_name: atlas-prom
    command: "--config.file=/etc/prometheus/config.yml"
    ports:
      - "9090:9090"
    volumes:
      - prometheus-volume:/prometheus
      - ./prometheus/config.yml:/etc/prometheus/config.yml
    profiles:
      - monitoring
  grafana:
    image: grafana/grafana:7.5.9
    container_name: atlas-grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=atlas
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    profiles:
      - monitoring

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  nginx:
    image: nginx:stable
    container_name: atlas-nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf


  pg-admin:
    image: dpage/pgadmin4
    ports:
      - "9201:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: root@localhost.localdomain
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_DISABLE_POSTFIX: "true"
      PGADMIN_CONFIG_SERVER_MODE: "False"

    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json

    profiles:
      - pgadmin
